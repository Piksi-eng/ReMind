// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReMIND.Server.Data;

namespace ReMIND.Server.Migrations
{
    [DbContext(typeof(ReMindContext))]
    [Migration("20220628181726_v7")]
    partial class v7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("ReMIND.Server.Data.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("JobGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("JobTagID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobWeight")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<int>("Multiplier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecurringType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDone")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isRead")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("JobGroupID");

                    b.HasIndex("JobTagID");

                    b.HasIndex("PersonID");

                    b.HasIndex("TeamID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobArchive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Finished")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobGroupName")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTagName")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobWeight")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamName")
                        .HasColumnType("TEXT");

                    b.Property<int>("tdID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("JobArchives");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Counter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("didAdminCreate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isRead")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("JobGroups");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("JobTags");
                });

            modelBuilder.Entity("ReMIND.Server.Data.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEmployed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ReMIND.Server.Data.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ReMIND.Server.Data.TeamLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Title")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.HasIndex("TeamID");

                    b.ToTable("TeamLinks");
                });

            modelBuilder.Entity("ReMIND.Server.Data.Job", b =>
                {
                    b.HasOne("ReMIND.Server.Data.JobGroup", "JobGroup")
                        .WithMany("Job")
                        .HasForeignKey("JobGroupID");

                    b.HasOne("ReMIND.Server.Data.JobTag", "JobTag")
                        .WithMany("Job")
                        .HasForeignKey("JobTagID");

                    b.HasOne("ReMIND.Server.Data.Person", "Person")
                        .WithMany("Job")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReMIND.Server.Data.Team", "Team")
                        .WithMany("Job")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobGroup");

                    b.Navigation("JobTag");

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobArchive", b =>
                {
                    b.HasOne("ReMIND.Server.Data.Person", "Person")
                        .WithMany("JobArchive")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobGroup", b =>
                {
                    b.HasOne("ReMIND.Server.Data.Team", "Team")
                        .WithMany("JobGroup")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ReMIND.Server.Data.TeamLink", b =>
                {
                    b.HasOne("ReMIND.Server.Data.Person", "Person")
                        .WithMany("TeamLink")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReMIND.Server.Data.Team", "Team")
                        .WithMany("TeamLink")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobGroup", b =>
                {
                    b.Navigation("Job");
                });

            modelBuilder.Entity("ReMIND.Server.Data.JobTag", b =>
                {
                    b.Navigation("Job");
                });

            modelBuilder.Entity("ReMIND.Server.Data.Person", b =>
                {
                    b.Navigation("Job");

                    b.Navigation("JobArchive");

                    b.Navigation("TeamLink");
                });

            modelBuilder.Entity("ReMIND.Server.Data.Team", b =>
                {
                    b.Navigation("Job");

                    b.Navigation("JobGroup");

                    b.Navigation("TeamLink");
                });
#pragma warning restore 612, 618
        }
    }
}
